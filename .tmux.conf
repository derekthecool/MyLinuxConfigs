#    ____                 __
#   / __ \___  ________  / /_______
#  / / / / _ \/ ___/ _ \/ //_/ ___/
# / /_/ /  __/ /  /  __/ ,< (__  )
#/_____/\___/_/   \___/_/|_/____/
#     __                                         ____
#    / /_____ ___  __  ___  __ _________  ____  / __/
#   / __/ __ `__ \/ / / / |/_// ___/ __ \/ __ \/ /_
# _/ /_/ / / / / / /_/ />  <_/ /__/ /_/ / / / / __/
#(_)__/_/ /_/ /_/\__,_/_/|_(_)___/\____/_/ /_/_/

# My process for choosing a tmux prefix
# Requirement 1: must be use a well supported key + control modifier
# Requirement 2: comfortable if possible
# Requirement 3: should not interfere with important shell or vim bindings.
# This list shows my thoughts for each combo with my ranking in square brackets
# [] 0 being unusable and 9 being perfect, empty means untested

# [5] Control + A: vim: increments numbers, shell: goes to start of line (emacs mode), thoughts: requires double C-a press for vim increment which is really annoying and is the motivation to write this guide list
# [0] Control + B: vim: my personal command to open buffer view, shell: goes back one character (emacs mode), thoughts: unusable because of my vim mapping
# [0] Control + C: 
# [] Control + D: 
# [] Control + E: 
# [] Control + F: 
# [] Control + G: 
# [] Control + H: 
# [] Control + I: 
# [] Control + J: 
# [] Control + K: 
# [] Control + L: 
# [] Control + M: 
# [] Control + N: 
# [] Control + O: 
# [] Control + P: 
# [] Control + Q: 
# [] Control + R: 
# [] Control + S: 
# [] Control + T: 
# [] Control + U: 
# [] Control + V: 
# [] Control + W: 
# [] Control + X: 
# [] Control + Y: 
# [] Control + Z: 

# Set prefix to control+a since control+space has issues in Alacritty on windows
set-option -g prefix C-a

# Set second prefix for tmux 1.6+ use prefix2 instead
# See this site for details
# https://unix.stackexchange.com/questions/29884/two-prefix-commands-for-tmux
set-option -g prefix2 C-Space

# Unbind unwanted keys
unbind-key % # Split in panes
unbind-key '"'
unbind-key C-Down
unbind-key C-Left
unbind-key C-Right
unbind-key C-Up

# Bind wanted keys
bind-key - split-window -v -c "#{pane_current_path}"
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
# I need C-u for vim to badly to keep this even though I like it
# bind-key -r -n C-u select-window -t :+ # Change windows without needing prefix first
# bind-key -r -n C-e select-window -t :- # Change windows without needing prefix first
# Use a steno option instead
bind-key -r -n » select-window -t :+ # Change windows without needing prefix first
bind-key -r -n « select-window -t :- # Change windows without needing prefix first
bind-key -r H resize-pane -L 5 # resize panes
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5
bind-key X kill-window         # Kill window without confirming
bind-key \; command-prompt # Set ; to work the same as :, this requires no shift
bind-key c new-window -c "#{pane_current_path}" # When opening a new window keep current path
bind-key l switch-client -l
bind-key x kill-pane           # Kill pane without confirming
bind-key | split-window -h -c "#{pane_current_path}" # When opening a new split keep current path

# Popup pane programs
bind-key \' display-popup -h 80% -w 80% -E 'htop'
bind-key -r -n ¶ display-popup -h 90% -w 90% -E 'vifm'

# Open in new window
## This command opens my wiki
bind-key j new-window -c ~/.mywiki/ 'nvim -c "2VimwikiMakeDiaryNote"'

## These two commands are the exact same
## This one is triggered by a key that is only possible to input with steno
bind-key -r -n ∑ new-window -c ~/.derek-shell-config/scripts/ ./tmux_launcher.sh
## This one is triggered by a normal binding of prefix + _
bind-key _ new-window -c ~/.derek-shell-config/scripts/ ./tmux_launcher.sh

## These commands open the tapey_tape log file in different ways
bind-key k new-window 'less +F /mnt/c/Users/Derek\ Lomax/AppData/Local/plover/plover/tapey_tape.txt'
bind-key K split-window -h 'less +F /mnt/c/Users/Derek\ Lomax/AppData/Local/plover/plover/tapey_tape.txt'

# Set individual options to my preference
set-option        -g allow-rename off         # Do not let tmux rename windows
set-option        -g base-index 1             # Start counting windows from 1
set-option        -g clock-mode-colour green  # Set color for clock
set-option        -g clock-mode-style 12      # Use 12 hour time format
set-option        -g history-limit 99999      # History Limit
set-option        -g mouse on                 # Enable mouse usage
set-option        -g renumber-windows on      # re-number windows when one is closed
set-window-option -g mode-keys vi             # Move like vi
set-window-option -g pane-base-index 1        # Start index for numbering windows at 1

# Easy open temporary panes, as soon as program exits the pane closes
# bind-key h split-window -h "htop" #Currently inactive but I love the idea

##   ______      __
##  / ____/___  / /___  __________
## / /   / __ \/ / __ \/ ___/ ___/
##/ /___/ /_/ / / /_/ / /  (__  )
##\____/\____/_/\____/_/  /____/
set -g default-terminal "screen-256color"
# tell Tmux that outside terminal supports true color
set-option -ga terminal-overrides ",xterm-256color*:Tc"
if-shell "test -f ~/.derek-shell-config/tmux/TmuxLineStartup" "source ~/.derek-shell-config/tmux/TmuxLineStartup"

# Press F12 to disable local tmux and send all keys to remote tmux
# Method found from this website https://www.freecodecamp.org/news/tmux-in-practice-local-and-nested-remote-tmux-sessions-4f7ba5db8795/ to help manage nested Tmux sessions
color_status_text="colour245"
color_window_off_status_bg="colour238"
color_light="white" #colour015
color_dark="colour232" # black= colour232
color_window_off_status_current_bg="colour254"

bind-key -T root F12  \
    set-option prefix None \;\
    set-option key-table off \;\
    set-option status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set-option window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set-option window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind-key -T off F12 \
    set-option -u prefix \;\
    set-option -u key-table \;\
    set-option -u status-style \;\
    set-option -u window-status-current-style \;\
    set-option -u window-status-current-format \;\
    refresh-client -S

#     ____  __            _
#    / __ \/ /_  ______ _(_)___  _____
#   / /_/ / / / / / __ `/ / __ \/ ___/
#  / ____/ / /_/ / /_/ / / / / (__  )
# /_/   /_/\__,_/\__, /_/_/ /_/____/
#               /____/
set-option -g @plugin 'tmux-plugins/tpm'                   # Plugin manager
set-option -g @plugin 'christoomey/vim-tmux-navigator'     # Easily use vim and tmux together
set-option -g @plugin 'tmux-plugins/tmux-sensible'         # Plugin for good default bindings
set-option -g @plugin 'tmux-plugins/tmux-yank'             # Easily link to system clipboard
set-option -g @plugin 'tmux-plugins/tmux-resurrect'        # Makes restoring from sessions easier
set-option -g @plugin 'tmux-plugins/tmux-continuum'        # Makes restoring from sessions easier
set-option -g @plugin 'tmux-plugins/tmux-prefix-highlight' # Simple plugin to show a indicator if prefix is detected
set-option -g @plugin 'olimorris/tmux-pomodoro-plus'       # Pomodoro technique is a time management system, 25 min work 5 min break
set-option -g @plugin 'laktak/extrakto'                    # Use fzf to search through visible text

# tmux-copy-toolkit is awesome, I have it disabled for now. I need to figure out
# how to remap prefix C-S which is conflicting with tmux-resurrect save.
# set-option -g @plugin 'CrispyConductor/tmux-copy-toolkit'  # Multi feature jumping and copy tool

# Settings for plugins
set-option -g @pomodoro_mins 25                            # #{pomodoro_status} set in TmuxLineStartup
set-option -g @pomodoro_break_mins 5
set-option -g @pomodoro_on "#[bg=red]🍅"
set-option -g @pomodoro_complete "#[bg=green]🍅"
set-option -g @pomodoro_start 'a'
set-option -g @pomodoro_cancel 'A'
set-option -g @prefix_highlight_show_copy_mode 'on'        # #{prefix_highlight} set in TmuxLineStartup
set-option -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'
set-option -g @prefix_highlight_show_sync_mode 'on'
set-option -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green' # default is 'fg=default,bg=yellow'
set-option -g @copytk-copy-command "cat | clip.exe"        # Command to get data to clipboard
set-option -g @resurrect-capture-pane-contents 'on'        # Very important to get resurrect to work
set-option -g @resurrect-hook-pre-restore-pane-processes 'tmux switch-client -n && tmux kill-session -t=0' # Kills blank session 0 when starting up resurrection
set-option -g @continuum-restore 'on'                      # Toggle this plugin to always be on
run '~/.tmux/plugins/tpm/tpm'                       # Run Tmux Plugin Manager
